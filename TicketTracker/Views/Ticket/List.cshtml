@model ListViewModel
@{
    Layout = "_Layout";
    var returnUrl = Context.Request.Path.ToString() + Context.Request.QueryString.ToString();
}
<script src="~/js/addGroup.js"></script>
<div>
    <a class="btn btn-primary" data-toggle="collapse" href="#filterdata" role="button" aria-expanded="false" aria-controls="filterdata">Filter</a>
    <div class="collapse" id="filterdata">
        <form asp-action="Search" method="get">
            <div class="form-group">
                <label asp-for="TicketID">Ticket ID</label>
                <input asp-for="TicketID" class="form-control" type="number" value="@Model.TicketID" />
            </div>
            <div class="form-group">
                <label asp-for="AssignmentStatus">Assignment Status</label>
                <select asp-for="AssignmentStatus" asp-items="@Html.GetEnumSelectList<AssignmentStatus>()" class="form-control">
                    <option value="@null">Any</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Title">Title</label>
                <input asp-for="Title" class="form-control" />
            </div>
            <div class="form-group">
                <div class="card">
                    <div class="card-header">Groups</div>
                    <ul class="list-group" id="groupList">
                        @for (int i = 0; i < Model.Groups.Length; i++)
                        {
                            <li class="list-group-item">
                                <label>Group</label>
                                <input id="groups" name="groups" class="form-control" value="@Model.Groups[i]" />
                            </li>
                        }
                        <li class="list-group-item">
                            <label>Group</label>
                            <input id="groups" name="groups" class="form-control" />
                        </li>
                    </ul>
                    <a href="#" id="addGroup" class="btn btn-primary">Add Group</a>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="User">Assigned to</label>
                <input asp-for="User" class="form-control" value="@Model.User" />
            </div>
            <button type="submit" class="btn btn-primary">Search</button>
        </form>
    </div>
</div>
<table class="table table-striped table-bordered mt-1">
    <tr><th>Ticket ID</th><th>Status</th><th>Title</th><th>Assigned to</th><th>Assignment Group</th></tr>
    @foreach (var t in Model.Tickets)
    {
        <tr>
            <td><a asp-action="Edit" asp-route-ticketId="@t.TicketId" asp-route-returnUrl="@returnUrl">@t.TicketId</a></td>
            <td>@t.AssignmentStatus</td>
            <td>@t.Title</td>
            <td>@t.AssignedUser</td>
            <td>@t.AssignedGroup?.Name</td>
        </tr>
    }
</table>
@if (Model.PageNumber > 1)
{
    <a asp-action="List" asp-route-pageNum="@(Model.PageNumber - 1)" asp-route-user="@Model.User" asp-route-groups="@Model.Groups" asp-route-pageSize="@Model.PageSize" asp-route-ticketId="@Model.TicketID" asp-route-assignment="@Model.AssignmentStatus" asp-route-title="@Model.Title" class="btn btn-secondary">Previous</a>
}
@if (Model.PageNumber * Model.PageSize < Model.Total)
{
    <a asp-action="List" asp-route-pageNum="@(Model.PageNumber + 1)" asp-route-user="@Model.User" asp-route-groups="@Model.Groups" asp-route-pageSize="@Model.PageSize" asp-route-ticketId="@Model.TicketID" asp-route-assignment="@Model.AssignmentStatus" asp-route-title="@Model.Title" class="btn btn-primary">Next</a>
}

